# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.3.10"

      - name: Obtener dependencias
        run: flutter pub get

      - name: Ejecutar pruebas
        run: flutter test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.3.10"

      - name: Obtener dependencias
        run: flutter pub get

      - name: Construir aplicación Flutter apk
        run: flutter build apk --release

      - name: Archivar apk
        uses: actions/upload-artifact@v2
        with:
          name: apk-artifact
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Descargar apk
        uses: actions/download-artifact@v2
        with:
          name: apk-artifact
          path: build/app/outputs/flutter-apk/app-release.apk
      
      - name: Crear versión de lanzamiento
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: Descripción del lanzamiento

      - name: Subir archivo de lanzamiento
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: aplicacion-${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
